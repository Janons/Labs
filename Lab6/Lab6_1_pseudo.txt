Pseudo Code

Algorithms and Data Structures

Lab6.1

Problem
A file includes a labyrinth with the following specifications:
* the first line of the file specifies the number of row R and the number of columns C of a matrix
* the following R lines specify the matrix rows (each one with C characters), where each
* '@' indicates the initial position of a human being
* ' ' represents corridors (empty cells)
* '*' represents walls (full cells)
* '#' represents exit points. Suppose that only one person is present in the maze in the initial configuration.

GOAL
Write three recursive functions to find:
* one escape path
* all escape paths
* the shortest escape path from the maze.
Print out the solution (or all solutions) on standard output.

To -Do
- [✅] Write a function for matrix creation
- [ ✅] Dynamically Allocate Matrix
- [ ] A function for Recursion
- [ ] Main Function
- [ ] Define the offsets for the human

Recursion

GOAL
1-> Generating the best path for escaping the maze

Contraints
1-> If the current path is bigger than the best we found
Return the best solution

2->If we reach => Exit
Make the best sol =Current matrix

3-> If we are at a border value
Return stepbest (This action will acts as a way to excape wrong path recursion)

Values
=> Route for the best path is what we return

How to create the path
1-> While iterating over available places -> Mark them with path marker

IMPORTANT IDEAS
1->For all contraints => We must define a base case
2->We can directly start with => For loops for the recursion to go over the possible solution
3->We reach to our starting point and then we start recursion from there and move on